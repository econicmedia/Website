name: Deploy BenFresh Website

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x]
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Build the app
        run: npm run build
        env:
          NODE_ENV: production
      
      - name: Run linting
        run: npm run lint
      
      - name: Run tests (if available)
        run: npm test || echo "No tests specified"
      
      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build-output
          path: .next
          retention-days: 1

  deploy:
    needs: build-and-test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name != 'pull_request'
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Download build artifacts
        uses: actions/download-artifact@v3
        with:
          name: build-output
          path: .next
      
      # For Vercel deployment
      - name: Deploy to Vercel
        if: ${{ false }} # Disabled until Vercel credentials are set up
        uses: amondnet/vercel-action@v20
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          vercel-args: '--prod'
      
      # For Netlify deployment
      - name: Deploy to Netlify
        if: ${{ false }} # Disabled until Netlify credentials are set up
        uses: nwtgck/actions-netlify@v1.2
        with:
          publish-dir: './out'
          production-branch: main
          github-token: ${{ secrets.GITHUB_TOKEN }}
          deploy-message: "Deploy from GitHub Actions"
          netlify-config-path: ./netlify.toml
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
      
      # For custom server deployment via SSH
      # This is a basic example of how you might set up a deployment to your own server
      - name: Deploy to Server
        if: ${{ false }} # Disabled until server credentials are set up
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            cd /var/www/benfresh
            git pull
            npm ci
            npm run build
            pm2 restart benfresh || pm2 start npm --name "benfresh" -- start

  notify:
    needs: [deploy]
    runs-on: ubuntu-latest
    if: always()
    
    steps:
      - name: Notify success
        if: ${{ needs.deploy.result == 'success' }}
        run: |
          echo "Deployment was successful"
          # Add notification code here (email, Slack, etc.)
      
      - name: Notify failure
        if: ${{ needs.deploy.result == 'failure' }}
        run: |
          echo "Deployment failed"
          # Add notification code here (email, Slack, etc.)
